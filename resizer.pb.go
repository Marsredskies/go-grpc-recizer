// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: resizer.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*ImageUploadRequest_Image
	//	*ImageUploadRequest_ChunkData
	Data isImageUploadRequest_Data `protobuf_oneof:"data"`
}

func (x *ImageUploadRequest) Reset() {
	*x = ImageUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resizer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageUploadRequest) ProtoMessage() {}

func (x *ImageUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resizer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageUploadRequest.ProtoReflect.Descriptor instead.
func (*ImageUploadRequest) Descriptor() ([]byte, []int) {
	return file_resizer_proto_rawDescGZIP(), []int{0}
}

func (m *ImageUploadRequest) GetData() isImageUploadRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ImageUploadRequest) GetImage() *ImageInfo {
	if x, ok := x.GetData().(*ImageUploadRequest_Image); ok {
		return x.Image
	}
	return nil
}

func (x *ImageUploadRequest) GetChunkData() []byte {
	if x, ok := x.GetData().(*ImageUploadRequest_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isImageUploadRequest_Data interface {
	isImageUploadRequest_Data()
}

type ImageUploadRequest_Image struct {
	Image *ImageInfo `protobuf:"bytes,1,opt,name=image,proto3,oneof"`
}

type ImageUploadRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*ImageUploadRequest_Image) isImageUploadRequest_Data() {}

func (*ImageUploadRequest_ChunkData) isImageUploadRequest_Data() {}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageType string `protobuf:"bytes,1,opt,name=image_type,json=imageType,proto3" json:"image_type,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resizer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_resizer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_resizer_proto_rawDescGZIP(), []int{1}
}

func (x *ImageInfo) GetImageType() string {
	if x != nil {
		return x.ImageType
	}
	return ""
}

type ImageReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ImageReturn) Reset() {
	*x = ImageReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resizer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageReturn) ProtoMessage() {}

func (x *ImageReturn) ProtoReflect() protoreflect.Message {
	mi := &file_resizer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageReturn.ProtoReflect.Descriptor instead.
func (*ImageReturn) Descriptor() ([]byte, []int) {
	return file_resizer_proto_rawDescGZIP(), []int{2}
}

func (x *ImageReturn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageReturn) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_resizer_proto protoreflect.FileDescriptor

var file_resizer_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x35, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x32, 0x48, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x72, 0x12, 0x3d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65,
	0x73, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x22, 0x00,
	0x42, 0x09, 0x5a, 0x07, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_resizer_proto_rawDescOnce sync.Once
	file_resizer_proto_rawDescData = file_resizer_proto_rawDesc
)

func file_resizer_proto_rawDescGZIP() []byte {
	file_resizer_proto_rawDescOnce.Do(func() {
		file_resizer_proto_rawDescData = protoimpl.X.CompressGZIP(file_resizer_proto_rawDescData)
	})
	return file_resizer_proto_rawDescData
}

var file_resizer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_resizer_proto_goTypes = []interface{}{
	(*ImageUploadRequest)(nil), // 0: resizer.ImageUploadRequest
	(*ImageInfo)(nil),          // 1: resizer.ImageInfo
	(*ImageReturn)(nil),        // 2: resizer.ImageReturn
}
var file_resizer_proto_depIdxs = []int32{
	1, // 0: resizer.ImageUploadRequest.image:type_name -> resizer.ImageInfo
	0, // 1: resizer.Resizer.Resize:input_type -> resizer.ImageUploadRequest
	2, // 2: resizer.Resizer.Resize:output_type -> resizer.ImageReturn
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_resizer_proto_init() }
func file_resizer_proto_init() {
	if File_resizer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resizer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resizer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resizer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_resizer_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ImageUploadRequest_Image)(nil),
		(*ImageUploadRequest_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resizer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resizer_proto_goTypes,
		DependencyIndexes: file_resizer_proto_depIdxs,
		MessageInfos:      file_resizer_proto_msgTypes,
	}.Build()
	File_resizer_proto = out.File
	file_resizer_proto_rawDesc = nil
	file_resizer_proto_goTypes = nil
	file_resizer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ResizerClient is the client API for Resizer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResizerClient interface {
	Resize(ctx context.Context, in *ImageUploadRequest, opts ...grpc.CallOption) (*ImageReturn, error)
}

type resizerClient struct {
	cc grpc.ClientConnInterface
}

func NewResizerClient(cc grpc.ClientConnInterface) ResizerClient {
	return &resizerClient{cc}
}

func (c *resizerClient) Resize(ctx context.Context, in *ImageUploadRequest, opts ...grpc.CallOption) (*ImageReturn, error) {
	out := new(ImageReturn)
	err := c.cc.Invoke(ctx, "/resizer.Resizer/Resize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResizerServer is the server API for Resizer service.
type ResizerServer interface {
	Resize(context.Context, *ImageUploadRequest) (*ImageReturn, error)
}

// UnimplementedResizerServer can be embedded to have forward compatible implementations.
type UnimplementedResizerServer struct {
}

func (*UnimplementedResizerServer) Resize(context.Context, *ImageUploadRequest) (*ImageReturn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resize not implemented")
}

func RegisterResizerServer(s *grpc.Server, srv ResizerServer) {
	s.RegisterService(&_Resizer_serviceDesc, srv)
}

func _Resizer_Resize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResizerServer).Resize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resizer.Resizer/Resize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResizerServer).Resize(ctx, req.(*ImageUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Resizer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resizer.Resizer",
	HandlerType: (*ResizerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Resize",
			Handler:    _Resizer_Resize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resizer.proto",
}
